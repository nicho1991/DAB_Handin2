--
-- Target: Adaptive Server Enterprise ASE 
-- Syntax: isql /Uuser /Ppassword /Sserver -i\path\filename.sql
-- Date  : Feb 28 2018 20:34
-- Script Generated by Database Design Studio 2.21.2 
--


--
-- Select Database: 'db_name'
--
USE db_name
GO
 
IF DB_NAME() = 'db_name'
    PRINT '''db_name'' DATABASE CONTEXT NOW IN USE.'
-- ELSE
--     RAISERROR 0000 'ERROR IN BATCH FILE, ''USE db_name'' FAILED!'
-- if you want to use RAISERROR you need to create a System Error number,
-- replace the 0000 above with the error number and uncomment the above
-- in the Sybase-ASE.tpl template file
 
GO
execute master..sp_dboption 'db_name' ,'trunc. log on chkpt.' , true
GO

--
-- Create Table    : 'Email'   
-- ID              :  
-- Email           :  
--
CREATE TABLE Email (
    ID             INT NOT NULL,
    Email          NVARCHAR NULL,
CONSTRAINT pk_Email PRIMARY KEY CLUSTERED (ID))
GO

--
-- Create Table    : 'PrimaryAdress'   
-- ID              :  
-- StreetName      :  
-- HouseNumber     :  
-- ZipCode         :  
-- CityName        :  
--
CREATE TABLE PrimaryAdress (
    ID             INT NOT NULL,
    StreetName     NVARCHAR NOT NULL,
    HouseNumber    NVARCHAR NOT NULL,
    ZipCode        NVARCHAR NOT NULL,
    CityName       NVARCHAR NOT NULL,
CONSTRAINT pk_PrimaryAdress PRIMARY KEY CLUSTERED (ID))
GO

--
-- Create Table    : 'AlternativeAdress'   
-- ID              :  
-- StreetName      :  
-- HouseNumber     :  
-- ZipCode         :  
-- CityName        :  
--
CREATE TABLE AlternativeAdress (
    ID             INT NOT NULL,
    StreetName     NVARCHAR NOT NULL,
    HouseNumber    NVARCHAR NOT NULL,
    ZipCode        NVARCHAR NOT NULL,
    CityName       NVARCHAR NOT NULL,
CONSTRAINT pk_AlternativeAdress PRIMARY KEY CLUSTERED (ID))
GO

--
-- Create Table    : 'Person'   
-- ID              :  
-- GivenName       :  
-- MiddleName      :  
-- FamilyName      :  
-- ID1             :  (references Email.ID)
-- ID2             :  (references PrimaryAdress.ID)
--
CREATE TABLE Person (
    ID             INT NOT NULL,
    GivenName      NVARCHAR NULL,
    MiddleName     NVARCHAR NULL,
    FamilyName     NVARCHAR NULL,
    ID1            INT NOT NULL,
    ID2            INT NOT NULL,
CONSTRAINT pk_Person PRIMARY KEY CLUSTERED (ID),
CONSTRAINT fk_Person FOREIGN KEY (ID1)
    REFERENCES Email (ID),
CONSTRAINT fk_Person2 FOREIGN KEY (ID2)
    REFERENCES PrimaryAdress (ID))
GO

--
-- Create Table    : 'Telephone'   
-- ID              :  
-- TelephoneNumber :  
-- UsageOfTlf      :  
-- PhoneCompany    :  
-- ID1             :  (references Person.ID)
--
CREATE TABLE Telephone (
    ID             INT NOT NULL,
    TelephoneNumber NVARCHAR NOT NULL,
    UsageOfTlf     NVARCHAR NOT NULL,
    PhoneCompany   NVARCHAR NOT NULL,
    ID1            INT NULL,
CONSTRAINT pk_Telephone PRIMARY KEY CLUSTERED (ID),
CONSTRAINT fk_Telephone FOREIGN KEY (ID1)
    REFERENCES Person (ID))
GO

--
-- Create Table    : 'TypeOfAdr'   
-- ID              :  (references Person.ID)
-- ID1             :  (references AlternativeAdress.ID)
-- TypeOfAdr       :  
--
CREATE TABLE TypeOfAdr (
    ID             INT NOT NULL,
    ID1            INT NOT NULL,
    TypeOfAdr      NVARCHAR(1) NOT NULL,
CONSTRAINT pk_TypeOfAdr PRIMARY KEY CLUSTERED (ID,ID1),
CONSTRAINT fk_TypeOfAdr FOREIGN KEY (ID)
    REFERENCES Person (ID),
CONSTRAINT fk_TypeOfAdr2 FOREIGN KEY (ID1)
    REFERENCES AlternativeAdress (ID))
GO

--
-- Permissions for: 'public'
--
GRANT ALL ON Email TO public
GO
GRANT ALL ON PrimaryAdress TO public
GO
GRANT ALL ON AlternativeAdress TO public
GO
GRANT ALL ON Person TO public
GO
GRANT ALL ON Telephone TO public
GO
GRANT ALL ON TypeOfAdr TO public
GO

